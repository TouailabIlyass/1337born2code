
#include <stdio.h>
#include <stdlib.h>

typedef	struct	s_list t_list;
struct s_list
{
	int		value;
	char	op;
	t_list	*next;
	t_list	*prev;
};

int			ft_do_op(int nb1, int nb2, char op)
{
	if (op == '+')
		return (nb1 + nb2);
	if (op == '-')
		return (nb1 - nb2);
	if (op == '*')
		return (nb1 * nb2);
	if (op == '/')
		return (nb1 / nb2);
	if (op == '%')
		return (nb1 % nb2);
	return (0);
}

t_list		*create_element(int value, char op)
{
	t_list *element;

	element = (t_list*)malloc(sizeof(t_list));
	element->value = value;
	element->op = op;
	element->next = NULL;
	element->prev = NULL;
	return (element);
}

void	add_element(t_list **head, int value, char op)
{
	t_list *element;
	t_list *ptr;

	element = create_element(value, op);
	if (*head == NULL)
	{
		*head = element;
		element->prev = NULL;
		return ;
	}
	ptr = *head;
	while (ptr->next)
		ptr = ptr->next;
	ptr->next = element;
	element->prev = ptr;
}

void	add_first(t_list **head, int value, char op)
{
	t_list *element;

	element = create_element(value, op);
	if (*head == NULL)
	{
		*head = element;
		return ;
	}
	element->next = *head;
	*head = element;
	element->next->prev=element;
}

void    remove_head(t_list **head)
{
    t_list *ptr;

    ptr = *head;
    *head = ptr->next;
    ptr->next->prev=NULL;
    free(ptr);
}
/*
void    remove_last(t_list **head)
{
    t_list *ptr;

    ptr = *head;
    while (ptr->next)
        ptr=ptr->next;
    ptr->prev->next=NULL;
    free(ptr);
}*/

void	remove_element(t_list **head)
{
	t_list *ptr;
	t_list *ptr2;

    ptr2 = *head;
    while(ptr2)
    {  
        ptr = *head;
	    if (*head == NULL)
	        return ;
	    if ((*head)->op == 'x')
	    {
	        remove_head(head);
	    }
	    while (ptr->next && ptr->op != 'x')
		    ptr = ptr->next;
		if (ptr->op == 'x')
		{
		    ptr->prev->next=ptr->next;
	        if (ptr->next != NULL)
	        ptr->next->prev = ptr->prev;
            free(ptr); 
		}
		ptr2 = ptr2->next;  
    }
    
}


void	show_list(t_list *head)
{
	while (head)
	{
		if (head->op == '?')
			printf("%d ", head->value);
		else
			printf("%c ", head->op);
		head = head->next;
	}
}



int		count_op(t_list *head)
{
	int c;

	 c = 0;
	 while (head)
	 {
		 if (head->op == '?')
			 c++;
	 }
	 return (c);
}

t_list    *Calculer(t_list *tmp2, t_list **head)
{
    t_list *dr;
    t_list *dr1;
    int value;
    
				value = ft_do_op(tmp2->prev->value, tmp2->next->value, tmp2->op);
				tmp2->prev->value = value;
				tmp2->op = 'x';
				tmp2->next->op= 'x';
				tmp2=tmp2->prev;
                remove_element(head);
                printf("xx\n");
                show_list(*head);
				if (tmp2->prev && tmp2->prev->op == '(' && tmp2->next->op == ')')
				{
				    tmp2->prev->op = 'x';
				    tmp2->next->op = 'x';
	                remove_element(head);
					return tmp2;
				}
				
	return tmp2;
			
}

int 	ch_do_op(t_list *ptr, t_list **head)
{
	t_list *tmp=ptr;
	t_list *tmp2=NULL;
	t_list *dr=NULL;
	t_list *dr1=NULL;
	int value=0;
  
    while ( tmp && tmp->op != '(')
	{
		tmp = tmp->prev;
	}
	
	if(tmp == NULL)
	{
	    tmp2=*head;
	    tmp=*head;
	    while(tmp->next)
	        tmp=tmp->next;
	    
	    ptr=tmp;
	}else 
	    tmp2=tmp;
	 
		
		while ( (tmp2 && tmp2 != ptr) )
		{
			if (tmp2->op == '*' || tmp2->op == '/' || tmp2->op == '%')
			{
			    tmp2=Calculer(tmp2, head);
			    value = 1;
			    return 0;
			}
			
			tmp2=tmp2->next;
		}
	
printf("\n%dvvv\n",value);
if (value == 0)
{
    tmp = ptr;
    while ( tmp && tmp->op != '(')
	{
		tmp = tmp->prev;
	}
	
	if(tmp == NULL)
	{
	    tmp2=*head;
	    tmp=*head;
	    while(tmp->next)
	        tmp=tmp->next;
	    
	    ptr=tmp;
	}else 
	    tmp2=tmp;
    
}
		
	//if (value == 0) tmp2=tmp;
		while (tmp2 && tmp2 != ptr)
		{printf("ic");
			if (tmp2->op == '+' || tmp2->op == '-')
			{
			    tmp2=Calculer(tmp2, head);
			    return 0;
			    
			}
			
			tmp2=tmp2->next;
		}

return value;
}

void	ft_calc(t_list **head)
{  
    t_list *ptr=*head;
    int d=1;
    while(d)
    {
        d=0;
        ptr=*head;
        while (ptr)
    	{
	    	if (ptr->op == ')')
	    	{
			ch_do_op(ptr,head);
			d=1;
		    }
		    ptr = ptr->next;
	    }
    }
        
     show_list(*head);
    ptr=*head;
    while((*head)->next)
    {
        ptr=*head;
       while(ptr)
    {   
        if(ptr->op != '?')
        {
            ch_do_op(ptr,head);
           //ptr=*head;
           
        }
         ptr = ptr->next;
    } 
    }
   
    
    
    
	
}

int		main(int argc, char **argv)
{
	t_list *head;
	int x;
	int i;
	head = NULL;
	i = 0;
	//argv[1]="3+4*(1-2/(3*4)-1\%2)+1";
	//argv[1]="(3*2+(4*2))+2*(2 + 7)";
	argv[1]="(3/2*3)";
	while (argv[1][i])
	{
		if (argv[1][i] >= '0' && argv[1][i] <= '9')
		{
		//	x = argv[1][i] - '0';
			add_element(&head,atoi(&argv[1][i]), '?');
		}
		else if (argv[1][i] != ' ')
			add_element(&head, 0, argv[1][i]);
		i++;
	}
	show_list(head);
	ft_calc(&head);
	printf("\n\nafter\n\n");
	
	show_list(head);
	printf("\n%d\n",(3/2*3));
	return (0);
}
